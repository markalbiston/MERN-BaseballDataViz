{"version":3,"sources":["components/BattingPieChart.jsx","views/TeamDetail.jsx","components/WinsGraph.jsx","components/RunsGraph.jsx","views/Welcome.jsx","components/PayrollScatter.jsx","views/AllTeamDetail.jsx","components/WarGraph.jsx","views/PlayerComparison.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["props","team","setTeam","id","useState","activeIndex","setActiveIndex","useEffect","axios","get","then","response","data","push","name","value","offense","hits","strikeouts","walks","plate_appearances","width","height","activeShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","d","stroke","r","toFixed","hex_color","dataKey","onMouseEnter","index","leagueAvgId","loaded","setLoaded","teamAvg","setTeamAvg","console","log","classes","makeStyles","table","minWidth","bold","fontWeight","useStyles","style","backgroundImage","avatar","backgroundSize","backgroundRepeat","city","nickname","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","games","at_bats","runs_scored","homeruns","defense","innings_pitched","hits_allowed","runs_allowed","strikeouts_pitched","defensive_efficiency","display","BattingPieChart","allTeams","setAllTeams","sortByWins","setSortByWins","sortByColor","setSortByColor","sortByDivision","setSortByDivision","avg_wins","sum_wins","forEach","wins","length","sort","a","b","Name","abbr","Wins","league_avg","division","margin","top","right","left","bottom","strokeDasharray","type","domain","tick","dx","barSize","radius","map","key","Button","variant","onClick","e","preventDefault","sortByRunsScored","setSortByRunsScored","sortByRunsAllowed","setSortByRunsAllowed","sortByDifferential","setSortByDifferential","differential","stackOffset","content","newPayload","stackId","paddingTop","href","minTicket","maxTicket","Payroll","payroll","z","avg_ticket_cost","unit","tickFormatter","toString","replace","position","offset","range","cursor","teams","setTeams","backgroundgray","backgroundColor","fontWhite","color","idPlayerOne","idPlayerTwo","playerOne","setPlayerOne","playerTwo","setPlayerTwo","Player1","cumWar","season01","Player2","season02","season03","season04","season05","season06","season07","season08","season09","season10","season11","season12","season13","season14","season15","season16","season17","season18","season19","season20","season21","season22","season23","setIdPlayerOne","setIdPlayerTwo","allPlayers","setAllPlayers","catch","err","theme","formControl","spacing","selectEmpty","marginTop","FormControl","InputLabel","Select","onChange","target","player","MenuItem","_id","WarGraph","i","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","useTheme","React","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Typography","noWrap","Drawer","anchor","paper","direction","Divider","List","text","ListItem","button","navigate","ListItemIcon","ListItemText","primary","src","alt","WinsGraph","path","RunsGraph","PayrollScatter","PlayerComparison","TeamDetail","AllTeamDetail","Welcome","App","Header","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e763f4b.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { PieChart, Pie, Sector } from 'recharts';\r\n\r\nexport default (props) => {\r\n    const {team, setTeam, id} = props;\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/team/' + id)\r\n        .then(response => {\r\n            setTeam(response.data);\r\n            // console.log(response.data);\r\n            // setLoaded(true)\r\n        })\r\n    },[id])\r\n    \r\n    const data = [];\r\n\r\n\r\n    if(team){\r\n        data.push({\r\n            name: 'Hits',\r\n            value: team.offense.hits\r\n        },\r\n        {\r\n            name: 'Strikeouts',\r\n            value: team.offense.strikeouts\r\n        },\r\n        {\r\n            name: 'Walks',\r\n            value: team.offense.walks\r\n        },\r\n        {\r\n            name: 'Groundout/Flyout/Sacrifice',\r\n            value: team.offense.plate_appearances - team.offense.hits - team.offense.walks - team.offense.strikeouts\r\n        })\r\n    }\r\n      \r\n    const renderActiveShape = (props) => {\r\n        const RADIAN = Math.PI / 180;\r\n        const {\r\n          cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n          fill, payload, percent, value,\r\n        } = props;\r\n        const sin = Math.sin(-RADIAN * midAngle);\r\n        const cos = Math.cos(-RADIAN * midAngle);\r\n        const sx = cx + (outerRadius + 10) * cos;\r\n        const sy = cy + (outerRadius + 10) * sin;\r\n        const mx = cx + (outerRadius + 30) * cos;\r\n        const my = cy + (outerRadius + 30) * sin;\r\n        const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n        const ey = my;\r\n        const textAnchor = cos >= 0 ? 'start' : 'end';\r\n      \r\n        return (\r\n          <g>\r\n            <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\r\n            <Sector\r\n              cx={cx}\r\n              cy={cy}\r\n              innerRadius={innerRadius}\r\n              outerRadius={outerRadius}\r\n              startAngle={startAngle}\r\n              endAngle={endAngle}\r\n              fill={fill}\r\n            />\r\n            <Sector\r\n              cx={cx}\r\n              cy={cy}\r\n              startAngle={startAngle}\r\n              endAngle={endAngle}\r\n              innerRadius={outerRadius + 6}\r\n              outerRadius={outerRadius + 10}\r\n              fill={fill}\r\n            />\r\n            <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\r\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`${payload.name} ${value}`}</text>\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\r\n              {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n            </text>\r\n          </g>\r\n        );\r\n    };\r\n\r\n    const onPieEnter = (data, index) => {\r\n        setActiveIndex(index)\r\n    }\r\n\r\n    return(\r\n        <div >\r\n        {team && <PieChart width={610} height={420}>\r\n            <Pie\r\n            activeIndex={activeIndex}\r\n            activeShape={renderActiveShape}\r\n            data={data}\r\n            cx={305}\r\n            cy={195}\r\n            innerRadius={130}\r\n            outerRadius={160}\r\n            fill={team.hex_color}\r\n            dataKey=\"value\"\r\n            onMouseEnter={onPieEnter}\r\n            />\r\n        </PieChart>}</div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport BattingPieChart from '../components/BattingPieChart';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default (props) => {\r\n    const {id, leagueAvgId} = props;\r\n    const [team, setTeam] = useState();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [teamAvg, setTeamAvg] = useState();\r\n\r\n    console.log(leagueAvgId);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/team/' + id)\r\n        .then(response => {\r\n            setTeam(response.data);\r\n            // console.log(response.data);\r\n            setLoaded(true)\r\n        })\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        console.log(leagueAvgId);\r\n        axios.get('http://localhost:8000/api/team/' + leagueAvgId)\r\n        .then(response => {\r\n            setTeamAvg(response.data);\r\n\r\n        })\r\n    },[leagueAvgId])\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n          minWidth: 650,\r\n        },\r\n        bold: {\r\n            fontWeight: \"bold\",\r\n        }\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return(\r\n        <div>\r\n            {loaded && \r\n            <div style={{ backgroundImage: `url(${team.avatar})`, backgroundSize: \"contain\", backgroundRepeat: \"repeat-y\", }}>\r\n            <h1>Team Detail</h1>\r\n             \r\n            <h2>{team.city} {team.nickname}</h2>\r\n            \r\n            </div>}\r\n            <h4>Offensive Statistics</h4>\r\n            {loaded && <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className={classes.bold} align=\"right\">Games</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">PA</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">AB</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">R</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">R/G</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">HR</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">HR%</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">BB</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">BB%</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">SO</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">SO%</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    <TableRow>\r\n                        <TableCell align=\"right\">{team.games}</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.plate_appearances}</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.at_bats}</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.runs_scored}</TableCell>\r\n                        <TableCell align=\"right\">{(team.offense.runs_scored/team.games).toFixed(2)}</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.homeruns}</TableCell>\r\n                        <TableCell align=\"right\">{(team.offense.homeruns/team.offense.plate_appearances*100).toFixed(2)}%</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.walks}</TableCell>\r\n                        <TableCell align=\"right\">{(team.offense.walks/team.offense.plate_appearances*100).toFixed(2)}%</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.strikeouts}</TableCell>\r\n                        <TableCell align=\"right\">{(team.offense.strikeouts/team.offense.plate_appearances*100).toFixed(2)}%</TableCell>\r\n                    </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n            }   \r\n            <h4>Defensive / Pitching Statistics</h4>\r\n            {loaded && <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className={classes.bold} align=\"right\">IP</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">H</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">R</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">R/G</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">SO</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">SO/9</TableCell>\r\n                        <TableCell className={classes.bold} align=\"right\">Def. Eff.</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    <TableRow>\r\n                        <TableCell align=\"right\">{team.defense.innings_pitched}</TableCell>\r\n                        <TableCell align=\"right\">{team.defense.hits_allowed}</TableCell>\r\n                        <TableCell align=\"right\">{team.defense.runs_allowed}</TableCell>\r\n                        <TableCell align=\"right\">{(team.defense.runs_allowed/team.games).toFixed(2)}</TableCell>\r\n                        <TableCell align=\"right\">{team.defense.strikeouts_pitched}</TableCell>\r\n                        <TableCell align=\"right\">{(team.defense.strikeouts_pitched/team.defense.innings_pitched*9).toFixed(2)}</TableCell>\r\n                        <TableCell align=\"right\">{team.defense.defensive_efficiency}</TableCell>\r\n                    </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n            }   \r\n            <Paper>\r\n                <div style={{display:'inline-block', width: '45%'}}>\r\n                    <h4>Team Offensive Statistics</h4>\r\n                    <BattingPieChart id={id} team={team} setTeam={setTeam}/>\r\n                </div>\r\n                <div style={{display:'inline-block', width: '45%'}}>\r\n                    <h4>League Average Offensive Statistics</h4>\r\n                    <BattingPieChart id={leagueAvgId} team={teamAvg} setTeam={setTeamAvg}/>\r\n                </div>\r\n            </Paper>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Area, BarChart } from 'recharts';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default (props) => {\r\n    const {allTeams, setAllTeams, loaded, setLoaded} = props;\r\n    // const [allTeams, setAllTeams] = useState([]);\r\n    // const [loaded, setLoaded] = useState(false);\r\n    const [sortByWins, setSortByWins] = useState(false)\r\n    const [sortByColor, setSortByColor] = useState(false)\r\n    const [sortByDivision, setSortByDivision] = useState(false)\r\n\r\n    // console.log(\"This is allTeams:\" + allTeams)\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/team/')\r\n        .then(response => {\r\n            setAllTeams(response.data);\r\n            setLoaded(true)\r\n        });\r\n    },[],)\r\n\r\n    const data =[];\r\n\r\n    if(allTeams){\r\n        // console.log(\"HERHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH\")\r\n        let avg_wins = 0;\r\n        let sum_wins = 0;\r\n        allTeams.forEach(team => {\r\n            sum_wins = sum_wins + team.wins\r\n        })\r\n        avg_wins = sum_wins/allTeams.length;\r\n        // console.log(avg_wins)\r\n        // let avg_avg_ticket_cost = 0;\r\n        // let sum_avg_ticket_cost = 0;\r\n        // allTeams.forEach(team => {\r\n        //     sum_avg_ticket_cost = sum_avg_ticket_cost + team.avg_ticket_cost\r\n        // })\r\n        // avg_avg_ticket_cost = sum_avg_ticket_cost/allTeams.length;\r\n        // console.log(avg_avg_ticket_cost)\r\n        if(sortByWins === true){\r\n            allTeams.sort((a,b) => (a.wins < b.wins) ? 1 : (a.wins === b.wins) ? ((a.city > b.city) ? 1 : -1) : -1).forEach(team => {\r\n                data.push({Name: `${team.abbr}`, Wins: `${team.wins}`, league_avg: `${avg_wins.toFixed(1)}`} );\r\n            })\r\n        }else if(sortByColor === true){\r\n            allTeams.sort((a,b) => (a.hex_color > b.hex_color) ? 1 : -1).forEach(team => {\r\n            data.push({Name: `${team.abbr}`, Wins: `${team.wins}`, league_avg: `${avg_wins.toFixed(1)}`} );\r\n            })\r\n        }else if(sortByDivision === true){\r\n            allTeams.sort((a,b) => (a.division > b.division) ? 1 : (a.division === b.division) ? ((a.wins < b.wins) ? 1 : -1) : -1).forEach(team => {\r\n                data.push({Name: `${team.abbr}`, Wins: `${team.wins}`, league_avg: `${avg_wins.toFixed(1)}`} );\r\n                })\r\n        }else{\r\n            allTeams.sort((a,b) => (a.hex_color > b.hex_color) ? 1 : -1).forEach(team => {\r\n                data.push({Name: `${team.abbr}`, Wins: `${team.wins}`, league_avg: `${avg_wins.toFixed(1)}`} );\r\n                })\r\n        }\r\n        // data.filter(team => team.abbr === \"MLB\")\r\n        // console.log(allTeams);\r\n    }\r\n    const onClickSortByWins = (e) => {\r\n        e.preventDefault();\r\n        setSortByWins(true)\r\n        setSortByColor(false)\r\n        setSortByDivision(false)\r\n    }\r\n    const onClickSortByDivision = (e) => {\r\n        e.preventDefault();\r\n        setSortByWins(false)\r\n        setSortByColor(false)\r\n        setSortByDivision(true)\r\n    }\r\n    const onClickSortByColor = (e) => {\r\n        e.preventDefault();\r\n        setSortByWins(false)\r\n        setSortByColor(true)\r\n        setSortByDivision(false)\r\n    }\r\n\r\n      \r\n    return(\r\n        <div>\r\n            <h1>Team Wins (2016 Season)</h1>\r\n            <h5>Gray area denotes league average</h5>\r\n            {/* <ResponsiveContainer> */}\r\n\r\n            {loaded &&\r\n            // <ResponsiveContainer width=\"97%\" height={400} className=\"center\">\r\n            <BarChart \r\n            className=\"center\"\r\n            width={1250}\r\n            height={400}\r\n            data={data}\r\n            margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n            }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"Name\" type='category'  />\r\n                <YAxis domain={[0, 120]} tick={{dx: -10}}/>\r\n                <Tooltip />\r\n                {/* <Legend /> */}\r\n                <Area type=\"monotone\" dataKey=\"league_avg\" fill=\"#CBD1D6\" stroke=\"#CBD1D6\" />\r\n                <Bar dataKey=\"Wins\" barSize={20} radius={[20,20,0,0]}>\r\n                    {\r\n                    allTeams.map((team, index) => {\r\n                    return <Cell key={index} fill={team.hex_color} />;\r\n                    })\r\n                    }\r\n                </Bar>\r\n                {/* <Line type=\"monotone\" dataKey=\"league_avg\" stroke=\"#ff7300\" /> */}\r\n            </BarChart>\r\n            // </ResponsiveContainer>\r\n            }\r\n            <Button variant=\"contained\" onClick={onClickSortByWins}>Sort By Total Wins</Button>\r\n            <Button variant=\"contained\" onClick={onClickSortByDivision}>Sort By Division</Button>\r\n            <Button variant=\"contained\" onClick={onClickSortByColor}>Sort By Team Color</Button>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default (props) => {\r\n    const {allTeams, setAllTeams, loaded, setLoaded} = props;\r\n    // const [allTeams, setAllTeams] = useState([]);\r\n    // const [loaded, setLoaded] = useState(false);\r\n    const [sortByRunsScored, setSortByRunsScored] = useState(false)\r\n    const [sortByRunsAllowed, setSortByRunsAllowed] = useState(false)\r\n    const [sortByColor, setSortByColor] = useState(false)\r\n    const [sortByDivision, setSortByDivision] = useState(false)\r\n    const [sortByDifferential, setSortByDifferential] = useState(false)\r\n\r\n    // console.log(\"This is allTeams:\" + allTeams)\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/team/')\r\n        .then(response => {\r\n            setAllTeams(response.data);\r\n            setLoaded(true)\r\n        });\r\n    },[],)\r\n\r\n    const data =[];\r\n    \r\n    if(allTeams){\r\n        if(sortByRunsScored === true){\r\n            allTeams.sort((a,b) => (a.offense.runs_scored < b.offense.runs_scored) ? 1 : (a.offense.runs_scored === b.offense.runs_scored) ? ((a.city > b.city) ? 1 : -1) : -1).forEach(team => {\r\n                data.push({name: `${team.abbr}`, runs_scored: `${team.offense.runs_scored}`, runs_allowed: `-${team.defense.runs_allowed}`, differential: `${team.offense.runs_scored - team.defense.runs_allowed}`} );\r\n            })\r\n        }else if(sortByRunsAllowed === true){\r\n            allTeams.sort((a,b) => (a.defense.runs_allowed > b.defense.runs_allowed) ? 1 : (a.defense.runs_allowed === b.defense.runs_allowed) ? ((a.city > b.city) ? 1 : -1) : -1).forEach(team => {\r\n                data.push({name: `${team.abbr}`, runs_scored: `${team.offense.runs_scored}`, runs_allowed: `-${team.defense.runs_allowed}`, differential: `${team.offense.runs_scored - team.defense.runs_allowed}`} );\r\n            })\r\n        }else if(sortByDifferential === true){\r\n            allTeams.sort((a,b) => (a.offense.runs_scored - a.defense.runs_allowed < b.offense.runs_scored-b.defense.runs_allowed) ? 1 : (a.offense.runs_scored - a.defense.runs_allowed === b.offense.runs_scored-b.defense.runs_allowed) ? ((a.nickname > b.nickname) ? 1 : -1) : -1).forEach(team => {\r\n                data.push({name: `${team.abbr}`, runs_scored: `${team.offense.runs_scored}`, runs_allowed: `-${team.defense.runs_allowed}`, differential: `${team.offense.runs_scored - team.defense.runs_allowed}`});\r\n            })\r\n        }else if(sortByColor === true){\r\n            allTeams.sort((a,b) => (a.hex_color > b.hex_color) ? 1 : -1).forEach(team => {\r\n            data.push({name: `${team.abbr}`, runs_scored: `${team.offense.runs_scored}`, runs_allowed: `-${team.defense.runs_allowed}`, differential: `${team.offense.runs_scored - team.defense.runs_allowed}`} );\r\n            })\r\n        }else if(sortByDivision === true){\r\n            allTeams.sort((a,b) => (a.division > b.division) ? 1 : (a.division === b.division) ? ((a.city > b.city) ? 1 : -1) : -1).forEach(team => {\r\n                data.push({name: `${team.abbr}`, runs_scored: `${team.offense.runs_scored}`, runs_allowed: `-${team.defense.runs_allowed}`, differential: `${team.offense.runs_scored - team.defense.runs_allowed}`} );\r\n                })\r\n        }else{\r\n            allTeams.sort((a,b) => (a.hex_color > b.hex_color) ? 1 : -1).forEach(team => {\r\n                data.push({name: `${team.abbr}`, runs_scored: `${team.offense.runs_scored}`, runs_allowed: `-${team.defense.runs_allowed}`, differential: `${team.offense.runs_scored - team.defense.runs_allowed}`} );\r\n                })\r\n        }\r\n        \r\n        \r\n        \r\n        // console.log(data);\r\n\r\n    }\r\n\r\n    const onClickSortByRunsScored = (e) => {\r\n        e.preventDefault();\r\n        setSortByDifferential(false)\r\n        setSortByRunsScored(true)\r\n        setSortByRunsAllowed(false)\r\n        setSortByColor(false)\r\n        setSortByDivision(false)\r\n    }\r\n    const onClickSortByRunsAllowed = (e) => {\r\n        e.preventDefault();\r\n        setSortByDifferential(false)\r\n        setSortByRunsScored(false)\r\n        setSortByRunsAllowed(true)\r\n        setSortByColor(false)\r\n        setSortByDivision(false)\r\n    }\r\n    const onClickSortByDifferential = (e) => {\r\n        e.preventDefault();\r\n        setSortByDifferential(true)\r\n        setSortByRunsScored(false)\r\n        setSortByRunsAllowed(false)\r\n        setSortByColor(false)\r\n        setSortByDivision(false)\r\n    }\r\n    const onClickSortByDivision = (e) => {\r\n        e.preventDefault();\r\n        setSortByDifferential(false)\r\n        setSortByRunsScored(false)\r\n        setSortByRunsAllowed(false)\r\n        setSortByColor(false)\r\n        setSortByDivision(true)\r\n    }\r\n    const onClickSortByColor = (e) => {\r\n        e.preventDefault();\r\n        setSortByDifferential(false)\r\n        setSortByRunsScored(false)\r\n        setSortByRunsAllowed(false)\r\n        setSortByColor(true)\r\n        setSortByDivision(false)\r\n    }\r\n\r\n    const CustomTooltipContent = props => {\r\n        // payload[0] doesn't exist when tooltip isn't visible\r\n        if (props.payload[0] != null) {\r\n          // mutating props directly is against react's conventions\r\n          // so we create a new payload with the name and value fields set to what we want\r\n          const newPayload = [\r\n            {\r\n              name: 'differential',\r\n              // all your data which created the tooltip is located in the .payload property\r\n              value: props.payload[0].payload.differential,\r\n              // you can also add \"unit\" here if you need it\r\n            },\r\n            ...props.payload,\r\n          ];\r\n      \r\n          // we render the default, but with our overridden payload\r\n          return <DefaultTooltipContent {...props} payload={newPayload} />;\r\n        }\r\n      \r\n        // we just render the default\r\n        return <DefaultTooltipContent {...props} />;\r\n      };\r\n\r\n      \r\n    return(\r\n        <div>\r\n            <h1>2016 Runs Scored vs Runs Allowed</h1>\r\n            <h5>Runs Scored showed in team color, Runs Allowed shown in gray</h5>\r\n            {loaded &&\r\n            // <ResponsiveContainer width=\"94%\" height={400} className=\"center\">\r\n            <BarChart\r\n            className=\"center\"\r\n            width={1250}\r\n            height={400}\r\n            data={data}\r\n            stackOffset=\"sign\"\r\n            margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n            }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip content={CustomTooltipContent} />\r\n                {/* <Legend /> */}\r\n                <ReferenceLine y={0} stroke=\"#000\" />\r\n                <Bar dataKey=\"runs_scored\" stackId=\"stack\" barSize={20} radius={[20,20,0,0]}>\r\n                    {\r\n                    allTeams.map((team, index) => {\r\n                    return <Cell key={index} fill={team.hex_color} />;\r\n                    })\r\n                    }\r\n                </Bar>\r\n                <Bar dataKey=\"runs_allowed\" stackId=\"stack\" barSize={20} radius={[20,20,0,0]} >\r\n                    {\r\n                    allTeams.map((team, index) => {\r\n                    return <Cell key={index} fill=\"#85929E\" />;\r\n                    })\r\n                    }\r\n                </Bar>\r\n            </BarChart>\r\n            // </ResponsiveContainer>\r\n            }\r\n            <Button variant=\"contained\" onClick={onClickSortByDifferential}>Sort By Run Differential</Button>\r\n            <Button variant=\"contained\" onClick={onClickSortByRunsScored}>Sort By Runs Scored</Button>\r\n            <Button variant=\"contained\" onClick={onClickSortByRunsAllowed}>Sort By Runs Allowed</Button>\r\n            <Button variant=\"contained\" onClick={onClickSortByDivision}>Sort By Division</Button>\r\n            <Button variant=\"contained\" onClick={onClickSortByColor}>Sort By Team Color</Button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport default () => {\r\n    return(\r\n        <>\r\n        <div className=\"baseballBackground\">\r\n            {/* <img className=\"App-Logo\" src={logo} alt=\"\"/> */}\r\n            <h1 style={{paddingTop:280}}>Welcome to Baseball DataViz</h1>\r\n            <h4>This site contains a curated collection of major league baseball data, primarily focused on the 2016 season.</h4>\r\n        </div>\r\n        <p>*Data obtained from: <a href=\"https://www.baseball-reference.com/\">BaseballReference.com</a>, <a href=\"https://www.ibtimes.com/mlb-payrolls-2016-dodgers-yankees-cubs-among-top-spenders-season-2349320\">International Business Times</a>, and <a href=\"https://www.vividseats.com/blog/mlb-ticket-prices-2016\">VividSeats.com</a></p>\r\n            \r\n            \r\n        \r\n        </>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip, Cell, Label} from 'recharts';\r\nimport DefaultTooltipContent from 'recharts/lib/component/DefaultTooltipContent';\r\n\r\nexport default () => {\r\n    const [allTeams, setAllTeams] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const data = [];\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/team/')\r\n        .then(response => {\r\n            setAllTeams(response.data);\r\n            setLoaded(true);\r\n        })\r\n    })\r\n\r\n    let minTicket = 100;\r\n    let maxTicket = 0;\r\n    if(allTeams){\r\n        // console.log(\"HERHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH\")\r\n        allTeams.sort((a,b) => (a.city > b.city) ? 1 : -1).forEach(team => {\r\n            data.push({Name: `${team.abbr}`, Payroll: `${team.payroll}`, Wins: `${team.wins}`, z:`${team.avg_ticket_cost}`});\r\n            if(team.avg_ticket_cost < minTicket){\r\n                minTicket = team.avg_ticket_cost\r\n            }\r\n            if(team.avg_ticket_cost > maxTicket){\r\n                maxTicket = team.avg_ticket_cost\r\n            }\r\n        })\r\n\r\n        // console.log(data);\r\n\r\n    }\r\n\r\n    const CustomTooltipContent = props => {\r\n        // payload[0] doesn't exist when tooltip isn't visible\r\n        if (props.payload[0] != null) {\r\n          // mutating props directly is against react's conventions\r\n          // so we create a new payload with the name and value fields set to what we want\r\n          const newPayload = [\r\n            {\r\n              name: 'Team',\r\n              // all your data which created the tooltip is located in the .payload property\r\n              value: props.payload[0].payload.Name,\r\n              // you can also add \"unit\" here if you need it\r\n            },\r\n            ...props.payload,\r\n          ];\r\n      \r\n          // we render the default, but with our overridden payload\r\n          return <DefaultTooltipContent {...props} payload={newPayload} />;\r\n        }\r\n      \r\n        // we just render the default\r\n        return <DefaultTooltipContent {...props} />;\r\n    };\r\n   \r\n    return(\r\n        <div>\r\n            <h1>Team Payroll vs Wins (2016 Season)</h1>\r\n            <h5>Bubble size denotes average ticket price (larger = more expensive)</h5>\r\n            {loaded &&\r\n            \r\n            <ScatterChart\r\n                className=\"center\"\r\n                width={1000}\r\n                height={400}\r\n                margin={{\r\n                top: 20, right: 20, bottom: 20, left: 20,\r\n                }}\r\n            >\r\n                <CartesianGrid />\r\n                {/* <Tooltip content={this.renderTooltip} /> */}\r\n                <XAxis type=\"number\" domain={[50000000, 275000000]} dataKey=\"Payroll\" name=\"Payroll\" unit=\"\" tickFormatter ={(tick) => tick.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\").replace(/(\\$?)([\\d,]+)/g, \"$$$2\")} >\r\n                    <Label value=\"Team Payroll\" position=\"bottom\" offset={5}/>\r\n                </XAxis>\r\n                <YAxis type=\"number\" domain={[50,110]} dataKey=\"Wins\" name=\"Wins\" unit=\"\" >\r\n                    <Label value=\"Wins\" position=\"left\" offset={-20} />\r\n                </YAxis>\r\n                <ZAxis type=\"number\" dataKey=\"z\" name=\"Avg Ticket Cost\" unit=\"\" range={[360, 200]} />\r\n                <Tooltip cursor={{ strokeDasharray: '1 1' }} content={CustomTooltipContent} />\r\n                <Scatter name=\"\" data={data}>\r\n                    {\r\n                    allTeams.map((team, index) => {\r\n                    return <Cell key={index} fill={team.hex_color}/>\r\n                    })\r\n                    }\r\n                </Scatter>\r\n            </ScatterChart>\r\n            \r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default (props) => {\r\n    // const {id} = props;\r\n    const [teams, setTeams] = useState();\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/team/')\r\n        .then(response => {\r\n            setTeams(response.data);\r\n            // console.log(response.data);\r\n            setLoaded(true)\r\n        })\r\n    },[])\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n          minWidth: 650,\r\n        },\r\n        bold: {\r\n            fontWeight: \"bold\"\r\n        },\r\n        backgroundgray: {\r\n            backgroundColor: \"gray\"\r\n        },\r\n        fontWhite: {\r\n            fontWeight: \"bold\",\r\n            color: \"white\"\r\n        }\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>MLB Detail</h1>\r\n            {/* {loaded && \r\n            <h2>{team.city} {team.nickname}</h2>\r\n            } */}\r\n            <h3>Offensive Statistics</h3>\r\n            {loaded && <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead >\r\n                    <TableRow className={classes.backgroundgray}>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">Team</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">Games</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">PA</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">AB</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">R</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">HR</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">HR%</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">BB</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">BB%</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">SO</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">SO%</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {loaded && teams.sort((a,b) => (a.nickname > b.nickname) ? 1 : -1).map((team, index) => \r\n                    <TableRow key={index}>\r\n                        <TableCell className={classes.bold} align=\"right\">{team.nickname}</TableCell>\r\n                        <TableCell align=\"right\">{team.games}</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.plate_appearances}</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.at_bats}</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.runs_scored}</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.homeruns}</TableCell>\r\n                        <TableCell align=\"right\">{(team.offense.homeruns/team.offense.plate_appearances*100).toFixed(2)}%</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.walks}</TableCell>\r\n                        <TableCell align=\"right\">{(team.offense.walks/team.offense.plate_appearances*100).toFixed(2)}%</TableCell>\r\n                        <TableCell align=\"right\">{team.offense.strikeouts}</TableCell>\r\n                        <TableCell align=\"right\">{(team.offense.strikeouts/team.offense.plate_appearances*100).toFixed(2)}%</TableCell>\r\n                    </TableRow>\r\n                    )\r\n                    }\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n            }\r\n            <h3>Defensive / Pitching Statistics</h3>\r\n            {loaded && <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead> \r\n                    <TableRow className={classes.backgroundgray}>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">Team</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">IP</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">H</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">R</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">R/G</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">SO</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">SO/9</TableCell>\r\n                        <TableCell className={classes.fontWhite} align=\"right\">Def. Eff.</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {loaded && teams.sort((a,b) => (a.nickname > b.nickname) ? 1 : -1).map((team, index) => \r\n                    <TableRow key={index}>\r\n                        <TableCell className={classes.bold} align=\"right\">{team.nickname}</TableCell>\r\n                        <TableCell align=\"right\">{team.defense.innings_pitched}</TableCell>\r\n                        <TableCell align=\"right\">{team.defense.hits_allowed}</TableCell>\r\n                        <TableCell align=\"right\">{team.defense.runs_allowed}</TableCell>\r\n                        <TableCell align=\"right\">{(team.defense.runs_allowed/team.games).toFixed(2)}</TableCell>\r\n                        <TableCell align=\"right\">{team.defense.strikeouts_pitched}</TableCell>\r\n                        <TableCell align=\"right\">{(team.defense.strikeouts_pitched/team.defense.innings_pitched*9).toFixed(2)}</TableCell>\r\n                        <TableCell align=\"right\">{team.defense.defensive_efficiency.toFixed(3)}</TableCell>\r\n                    </TableRow>\r\n                    )\r\n                    }\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n            }   \r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nexport default (props) => {\r\n    const {idPlayerOne, idPlayerTwo} = props;\r\n    const [playerOne, setPlayerOne] = useState();\r\n    const [playerTwo, setPlayerTwo] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/player/'+idPlayerOne)\r\n        .then(response => {\r\n            setPlayerOne(response.data)\r\n        })\r\n    },[idPlayerOne])\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/player/'+idPlayerTwo)\r\n        .then(response => {\r\n            setPlayerTwo(response.data)\r\n        })\r\n    },[idPlayerTwo])\r\n\r\n    let data =[];\r\n\r\n    if(playerOne && playerTwo){\r\n        data = [\r\n            {\r\n                name: 'Season 1', Player1: `${playerOne.cumWar.season01}`, Player2: `${playerTwo.cumWar.season01}`\r\n            },\r\n            {\r\n                name: 'Season 2', Player1: `${playerOne.cumWar.season02}`, Player2: `${playerTwo.cumWar.season02}`\r\n            },\r\n            {\r\n                name: 'Season 3', Player1: `${playerOne.cumWar.season03}`, Player2: `${playerTwo.cumWar.season03}`\r\n            },\r\n            {\r\n                name: 'Season 4', Player1: `${playerOne.cumWar.season04}`, Player2: `${playerTwo.cumWar.season04}`\r\n            },\r\n            {\r\n                name: 'Season 5', Player1: `${playerOne.cumWar.season05}`, Player2: `${playerTwo.cumWar.season05}`\r\n            },\r\n            {\r\n                name: 'Season 6', Player1: `${playerOne.cumWar.season06}`, Player2: `${playerTwo.cumWar.season06}`\r\n            },\r\n            {\r\n                name: 'Season 7', Player1: `${playerOne.cumWar.season07}`, Player2: `${playerTwo.cumWar.season07}`\r\n            },\r\n            {\r\n                name: 'Season 8', Player1: `${playerOne.cumWar.season08}`, Player2: `${playerTwo.cumWar.season08}`\r\n            },\r\n            {\r\n                name: 'Season 9', Player1: `${playerOne.cumWar.season09}`, Player2: `${playerTwo.cumWar.season09}`\r\n            },\r\n            {\r\n                name: 'Season 10', Player1: `${playerOne.cumWar.season10}`, Player2: `${playerTwo.cumWar.season10}`\r\n            },\r\n            {\r\n                name: 'Season 11', Player1: `${playerOne.cumWar.season11}`, Player2: `${playerTwo.cumWar.season11}`\r\n            },\r\n            {\r\n                name: 'Season 12', Player1: `${playerOne.cumWar.season12}`, Player2: `${playerTwo.cumWar.season12}`\r\n            },\r\n            {\r\n                name: 'Season 13', Player1: `${playerOne.cumWar.season13}`, Player2: `${playerTwo.cumWar.season13}`\r\n            },\r\n            {\r\n                name: 'Season 14', Player1: `${playerOne.cumWar.season14}`, Player2: `${playerTwo.cumWar.season14}`\r\n            },\r\n            {\r\n                name: 'Season 15', Player1: `${playerOne.cumWar.season15}`, Player2: `${playerTwo.cumWar.season15}`\r\n            },\r\n            {\r\n                name: 'Season 16', Player1: `${playerOne.cumWar.season16}`, Player2: `${playerTwo.cumWar.season16}`\r\n            },\r\n            {\r\n                name: 'Season 17', Player1: `${playerOne.cumWar.season17}`, Player2: `${playerTwo.cumWar.season17}`\r\n            },\r\n            {\r\n                name: 'Season 18', Player1: `${playerOne.cumWar.season18}`, Player2: `${playerTwo.cumWar.season18}`\r\n            },\r\n            {\r\n                name: 'Season 19', Player1: `${playerOne.cumWar.season19}`, Player2: `${playerTwo.cumWar.season19}`\r\n            },\r\n            {\r\n                name: 'Season 20', Player1: `${playerOne.cumWar.season20}`, Player2: `${playerTwo.cumWar.season20}`\r\n            },\r\n            {\r\n                name: 'Season 21', Player1: `${playerOne.cumWar.season21}`, Player2: `${playerTwo.cumWar.season21}`\r\n            },\r\n            {\r\n                name: 'Season 22', Player1: `${playerOne.cumWar.season22}`, Player2: `${playerTwo.cumWar.season22}`\r\n            },\r\n            {\r\n                name: 'Season 23', Player1: `${playerOne.cumWar.season23}`, Player2: `${playerTwo.cumWar.season23}`\r\n            },\r\n        ]\r\n        // console.log(data)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {playerOne && playerTwo && \r\n            // <ResponsiveContainer width=\"90%\" height={450} className=\"center\">\r\n            <LineChart\r\n                className=\"center\"\r\n                width={1000}\r\n                height={450}\r\n                data={data}\r\n                margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis domain={[0, 200]} />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Player1\" name={playerOne.name} stroke=\"#8884d8\" />\r\n                <Line type=\"monotone\" dataKey=\"Player2\" name={playerTwo.name} stroke=\"#82ca9d\" />\r\n            </LineChart>\r\n            // </ResponsiveContainer>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {FormControl, Select, InputLabel, MenuItem} from '@material-ui/core';\r\nimport WarGraph from '../components/WarGraph';\r\n\r\nexport default () => {\r\n    const [idPlayerOne, setIdPlayerOne] = useState();\r\n    const [idPlayerTwo, setIdPlayerTwo] = useState();\r\n    const [allPlayers, setAllPlayers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/player/')\r\n        .then(response => {\r\n            setAllPlayers(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    },[])\r\n\r\n    const handleChangePlayer1 = (e) => {\r\n        setIdPlayerOne(e.target.value);\r\n    }\r\n    const handleChangePlayer2 = (e) => {\r\n        setIdPlayerTwo(e.target.value);\r\n    }\r\n    \r\n    const useStyles = makeStyles(theme => ({\r\n        formControl: {\r\n          margin: theme.spacing(1),\r\n          minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div>\r\n            <h1>Individual Player Career WAR Comparison</h1>\r\n            <h3>WAR = Wins Above Replacement</h3>\r\n            <h5>A single number that presents the number of wins the player added to the team above what a replacement player would add.</h5>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"\">Player 1</InputLabel>\r\n                <Select\r\n                onChange={handleChangePlayer1}\r\n                >\r\n                {allPlayers.sort((a,b) => (a.name > b.name) ? 1 : -1).map((player, index) => {\r\n                    return <MenuItem key={index} value={player._id}>{player.name}</MenuItem>\r\n                })}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"\">Player 2</InputLabel>\r\n                <Select\r\n                onChange={handleChangePlayer2}\r\n                >\r\n                {allPlayers.sort((a,b) => (a.name > b.name) ? 1 : -1).map((player, index) => {\r\n                    return <MenuItem key={index} value={player._id}>{player.name}</MenuItem>\r\n                })}\r\n                </Select>\r\n            </FormControl>\r\n            <WarGraph idPlayerOne={idPlayerOne} idPlayerTwo={idPlayerTwo}/>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Router, navigate} from '@reach/router';\r\nimport clsx from 'clsx';\r\nimport TeamDetail from '../views/TeamDetail';\r\nimport WinsGraph from './WinsGraph';\r\nimport RunsGraph from './RunsGraph';\r\nimport Welcome from '../views/Welcome';\r\nimport PayrollScatter from './PayrollScatter';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Typography, IconButton, Drawer, CssBaseline, List, ListItem, ListItemText, Divider,  } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport MultilineChartIcon from '@material-ui/icons/MultilineChart';\r\nimport SportsBaseballIcon from '@material-ui/icons/SportsBaseball';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AllTeamDetail from '../views/AllTeamDetail';\r\nimport PlayerComparison from '../views/PlayerComparison';\r\n\r\nexport default () => {\r\n    const [allTeams, setAllTeams] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    let leagueAvgId = \"\";\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/team/')\r\n        .then(response => {\r\n            setAllTeams(response.data);\r\n            setLoaded(true)\r\n        });\r\n    },[],)\r\n\r\n    if(loaded){\r\n      console.log(allTeams);\r\n      for(let i = 0; i<allTeams.length; i++){\r\n        if(allTeams[i].abbr === \"AVG\"){\r\n          console.log(allTeams[i]);\r\n          leagueAvgId = allTeams[i]._id;\r\n        }\r\n      }\r\n    }\r\n   \r\n    const drawerWidth = 240;\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n      root: {\r\n        display: 'flex',\r\n      },\r\n      appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        // backgroundImage: \"linear-gradient(to right, #405D4A, #AAB7B8)\"\r\n        backgroundColor: \"#405D4A\"\r\n\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n\r\n      },\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n        // backgroundImage: \"linear-gradient(to right, #AAB7B8, #5F6A6A )\"\r\n\r\n      },\r\n      drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n      },\r\n      contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n      },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n   \r\n    return(\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, open && classes.hide)}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" noWrap>\r\n                    Baseball DataViz\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                {['Home'].map((text, index) => (\r\n                    <ListItem button key={index} onClick={(e) => {navigate('/')}} >\r\n                    <ListItemIcon>{<HomeIcon/>}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                {['Wins', 'Runs', 'Payroll', 'Player_Comparison'].map((text, index) => (\r\n                    <ListItem button key={index} onClick={(e) => {navigate(`/graphs/${text}`)}} >\r\n                    <ListItemIcon>{text===\"Wins\" || text ===\"Runs\" ? <BarChartIcon /> : text === \"Payroll\" ? <BubbleChartIcon/> : <MultilineChartIcon/>}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button onClick={(e) => {navigate(`/teams/`)}}>\r\n                    <ListItemIcon><SportsBaseballIcon /></ListItemIcon>\r\n                    \r\n                    <ListItemText primary=\"All Teams\" />\r\n                    </ListItem>\r\n                {loaded && allTeams.sort((a,b) => (a.city > b.city) ? 1 : -1).map((team, index) => (\r\n                    <ListItem button key={index} onClick={(e) => {navigate(`/team/${team._id}`)}}>\r\n                    <ListItemIcon><img style={{height:25, }} src={team.avatar} alt=\"\"/></ListItemIcon>\r\n                    \r\n                        <ListItemText primary={team.city +\" \"+ team.nickname} />\r\n\r\n                    </ListItem>\r\n                ))}\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Router>\r\n                    <WinsGraph path=\"/graphs/Wins\" allTeams={allTeams} setAllTeams={setAllTeams} loaded={loaded} setLoaded={setLoaded}/>\r\n                    <RunsGraph path=\"/graphs/Runs\" allTeams={allTeams} setAllTeams={setAllTeams} loaded={loaded} setLoaded={setLoaded}/>\r\n                    <PayrollScatter path=\"/graphs/Payroll\" />\r\n                    <PlayerComparison path=\"/graphs/Player_Comparison\" />\r\n                    <TeamDetail path=\"/team/:id\" allTeams={allTeams} setAllTeams={setAllTeams} loaded={loaded} setLoaded={setLoaded} leagueAvgId={leagueAvgId}/>\r\n                    <AllTeamDetail path=\"/teams/\" />\r\n                    <Welcome path=\"/\"/>\r\n                </Router>\r\n            </main>\r\n        </div>\r\n    )\r\n\r\n    \r\n}","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}